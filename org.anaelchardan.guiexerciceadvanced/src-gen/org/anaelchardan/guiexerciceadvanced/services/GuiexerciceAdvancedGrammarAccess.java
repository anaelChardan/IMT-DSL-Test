/*
 * generated by Xtext 2.12.0
 */
package org.anaelchardan.guiexerciceadvanced.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GuiexerciceAdvancedGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced.Program");
		private final Assignment cFramesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cFramesFrameParserRuleCall_0 = (RuleCall)cFramesAssignment.eContents().get(0);
		
		//Program:
		//	frames+=Frame+;
		@Override public ParserRule getRule() { return rule; }
		
		//frames+=Frame+
		public Assignment getFramesAssignment() { return cFramesAssignment; }
		
		//Frame
		public RuleCall getFramesFrameParserRuleCall_0() { return cFramesFrameParserRuleCall_0; }
	}
	public class FrameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced.Frame");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFrameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFrameNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFrameNameFrameNameParserRuleCall_1_0 = (RuleCall)cFrameNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cTitleKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cColonKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cTitleAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_0_2_0 = (RuleCall)cTitleAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cWidthKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cWidthAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cWidthINTTerminalRuleCall_3_1_2_0 = (RuleCall)cWidthAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cHeightKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cColonKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cHeightAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cHeightINTTerminalRuleCall_3_2_2_0 = (RuleCall)cHeightAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cContentKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cContentsAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cContentsContentParserRuleCall_3_3_2_0 = (RuleCall)cContentsAssignment_3_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3_3 = (Keyword)cGroup_3_3.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Frame:
		//	'frame' frameName=FrameName '{' ('title' ':' title=STRING & 'width' ':' width=INT & 'height' ':' height=INT &
		//	'content' '{' contents+=Content* '}')
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'frame' frameName=FrameName '{' ('title' ':' title=STRING & 'width' ':' width=INT & 'height' ':' height=INT & 'content'
		//'{' contents+=Content* '}') '}'
		public Group getGroup() { return cGroup; }
		
		//'frame'
		public Keyword getFrameKeyword_0() { return cFrameKeyword_0; }
		
		//frameName=FrameName
		public Assignment getFrameNameAssignment_1() { return cFrameNameAssignment_1; }
		
		//FrameName
		public RuleCall getFrameNameFrameNameParserRuleCall_1_0() { return cFrameNameFrameNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'title' ':' title=STRING & 'width' ':' width=INT & 'height' ':' height=INT & 'content' '{' contents+=Content* '}'
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//'title' ':' title=STRING
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'title'
		public Keyword getTitleKeyword_3_0_0() { return cTitleKeyword_3_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_0_1() { return cColonKeyword_3_0_1; }
		
		//title=STRING
		public Assignment getTitleAssignment_3_0_2() { return cTitleAssignment_3_0_2; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_0_2_0() { return cTitleSTRINGTerminalRuleCall_3_0_2_0; }
		
		//'width' ':' width=INT
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'width'
		public Keyword getWidthKeyword_3_1_0() { return cWidthKeyword_3_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//width=INT
		public Assignment getWidthAssignment_3_1_2() { return cWidthAssignment_3_1_2; }
		
		//INT
		public RuleCall getWidthINTTerminalRuleCall_3_1_2_0() { return cWidthINTTerminalRuleCall_3_1_2_0; }
		
		//'height' ':' height=INT
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'height'
		public Keyword getHeightKeyword_3_2_0() { return cHeightKeyword_3_2_0; }
		
		//':'
		public Keyword getColonKeyword_3_2_1() { return cColonKeyword_3_2_1; }
		
		//height=INT
		public Assignment getHeightAssignment_3_2_2() { return cHeightAssignment_3_2_2; }
		
		//INT
		public RuleCall getHeightINTTerminalRuleCall_3_2_2_0() { return cHeightINTTerminalRuleCall_3_2_2_0; }
		
		//'content' '{' contents+=Content* '}'
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'content'
		public Keyword getContentKeyword_3_3_0() { return cContentKeyword_3_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_3_1() { return cLeftCurlyBracketKeyword_3_3_1; }
		
		//contents+=Content*
		public Assignment getContentsAssignment_3_3_2() { return cContentsAssignment_3_3_2; }
		
		//Content
		public RuleCall getContentsContentParserRuleCall_3_3_2_0() { return cContentsContentParserRuleCall_3_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3_3() { return cRightCurlyBracketKeyword_3_3_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FrameNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced.FrameName");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//FrameName:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced.Content");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLabelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cButtonParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Content:
		//	Label | Button;
		@Override public ParserRule getRule() { return rule; }
		
		//Label | Button
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Label
		public RuleCall getLabelParserRuleCall_0() { return cLabelParserRuleCall_0; }
		
		//Button
		public RuleCall getButtonParserRuleCall_1() { return cButtonParserRuleCall_1; }
	}
	public class LabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced.Label");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLabelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		
		//Label:
		//	'label' ':' label=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'label' ':' label=STRING
		public Group getGroup() { return cGroup; }
		
		//'label'
		public Keyword getLabelKeyword_0() { return cLabelKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//label=STRING
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }
		
		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }
	}
	public class ButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced.Button");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cButtonAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cButtonSTRINGTerminalRuleCall_2_0 = (RuleCall)cButtonAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cToFrameNameCrossReference_4_0 = (CrossReference)cToAssignment_4.eContents().get(0);
		private final RuleCall cToFrameNameIDTerminalRuleCall_4_0_1 = (RuleCall)cToFrameNameCrossReference_4_0.eContents().get(1);
		
		//Button:
		//	'button' ':' button=STRING '->' to=[FrameName];
		@Override public ParserRule getRule() { return rule; }
		
		//'button' ':' button=STRING '->' to=[FrameName]
		public Group getGroup() { return cGroup; }
		
		//'button'
		public Keyword getButtonKeyword_0() { return cButtonKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//button=STRING
		public Assignment getButtonAssignment_2() { return cButtonAssignment_2; }
		
		//STRING
		public RuleCall getButtonSTRINGTerminalRuleCall_2_0() { return cButtonSTRINGTerminalRuleCall_2_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//to=[FrameName]
		public Assignment getToAssignment_4() { return cToAssignment_4; }
		
		//[FrameName]
		public CrossReference getToFrameNameCrossReference_4_0() { return cToFrameNameCrossReference_4_0; }
		
		//ID
		public RuleCall getToFrameNameIDTerminalRuleCall_4_0_1() { return cToFrameNameIDTerminalRuleCall_4_0_1; }
	}
	
	
	private final ProgramElements pProgram;
	private final FrameElements pFrame;
	private final FrameNameElements pFrameName;
	private final ContentElements pContent;
	private final LabelElements pLabel;
	private final ButtonElements pButton;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GuiexerciceAdvancedGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProgram = new ProgramElements();
		this.pFrame = new FrameElements();
		this.pFrameName = new FrameNameElements();
		this.pContent = new ContentElements();
		this.pLabel = new LabelElements();
		this.pButton = new ButtonElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.anaelchardan.guiexerciceadvanced.GuiexerciceAdvanced".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Program:
	//	frames+=Frame+;
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}
	
	//Frame:
	//	'frame' frameName=FrameName '{' ('title' ':' title=STRING & 'width' ':' width=INT & 'height' ':' height=INT &
	//	'content' '{' contents+=Content* '}')
	//	'}';
	public FrameElements getFrameAccess() {
		return pFrame;
	}
	
	public ParserRule getFrameRule() {
		return getFrameAccess().getRule();
	}
	
	//FrameName:
	//	name=ID;
	public FrameNameElements getFrameNameAccess() {
		return pFrameName;
	}
	
	public ParserRule getFrameNameRule() {
		return getFrameNameAccess().getRule();
	}
	
	//Content:
	//	Label | Button;
	public ContentElements getContentAccess() {
		return pContent;
	}
	
	public ParserRule getContentRule() {
		return getContentAccess().getRule();
	}
	
	//Label:
	//	'label' ':' label=STRING;
	public LabelElements getLabelAccess() {
		return pLabel;
	}
	
	public ParserRule getLabelRule() {
		return getLabelAccess().getRule();
	}
	
	//Button:
	//	'button' ':' button=STRING '->' to=[FrameName];
	public ButtonElements getButtonAccess() {
		return pButton;
	}
	
	public ParserRule getButtonRule() {
		return getButtonAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
